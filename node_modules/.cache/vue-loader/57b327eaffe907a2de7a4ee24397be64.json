{"remainingRequest":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/src/components/Buttons/PanelButtons.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/src/components/Buttons/PanelButtons.vue","mtime":1570415004844},{"path":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AppButton from \"./Button\";\nimport Score from \"@/components/Scores/Score\";\n\nexport default {\n  name: \"panel-buttons\",\n  components: {\n    AppButton\n  },\n  props: {\n    type: {\n      type: String,\n      default: \"panel\"\n    }\n  },\n  computed: {\n    panelClass() {\n      return `${this.type}`;\n    }\n  },\n  methods: {\n    attack(special) {\n      console.log(\"Alguma coisa\");\n      var atr = character_life.name[\"monster_life\"];\n\n      // this.hurt('monster_life', 5, 10, special,\n      //     'Player', 'Monster'\n      //     // , 'player'\n      // )\n      // if(this.monster_life > 0)\n      //     this.hurt('player_life', 7, 12, false,\n      //         'Monster', 'Player'\n      //         // , 'monster'\n      //     )\n    },\n    hurt(\n      atr,\n      min,\n      max,\n      special,\n      source,\n      target\n      // ,cls\n    ) {\n      const plus = special ? 5 : 0;\n      const hurt = this.get_random(min + plus, max + plus);\n      //this[prop] - acessa em this o nome da variável\n      this[atr] = Math.max(this[prop] - hurt, 0);\n      // this.register_log(\n      //     `${source} atingiu ${target} com ${hurt}.`, cls\n      // )\n    },\n    heal_and_hurt() {\n      this.heal(10, 15);\n      this.hurt(\n        \"player_life\",\n        7,\n        12,\n        false,\n        \"Monstro\",\n        \"Jogador\"\n        // , 'monster'\n      );\n    },\n    heal(min, max) {\n      const heal = this.get_random(min, max);\n      this.player_life = Math.min(this.player_life + heal, 100);\n      // this.register_log(\n      //     `Jogador ganhou força de ${heal}.`, 'player'\n      // )\n    }\n  }\n};\n",{"version":3,"sources":["PanelButtons.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PanelButtons.vue","sourceRoot":"src/components/Buttons","sourcesContent":["<template>\n  <div id=\"panelButtons\" :class=\"panelClass\">\n    <app-button type=\"attack\" button_role=\"Ataque\" @click=\"attack(false)\" />\n    <app-button type=\"special-attack\" button_role=\"Ataque Especial\" @click=\"attack(true)\" />\n    <app-button type=\"heal\" button_role=\"Cura\" @click=\"heal_and_hurt\" />\n    <app-button type=\"give-up\" button_role=\"Desiste\" />\n  </div>\n</template>\n\n<script>\nimport AppButton from \"./Button\";\nimport Score from \"@/components/Scores/Score\";\n\nexport default {\n  name: \"panel-buttons\",\n  components: {\n    AppButton\n  },\n  props: {\n    type: {\n      type: String,\n      default: \"panel\"\n    }\n  },\n  computed: {\n    panelClass() {\n      return `${this.type}`;\n    }\n  },\n  methods: {\n    attack(special) {\n      console.log(\"Alguma coisa\");\n      var atr = character_life.name[\"monster_life\"];\n\n      // this.hurt('monster_life', 5, 10, special,\n      //     'Player', 'Monster'\n      //     // , 'player'\n      // )\n      // if(this.monster_life > 0)\n      //     this.hurt('player_life', 7, 12, false,\n      //         'Monster', 'Player'\n      //         // , 'monster'\n      //     )\n    },\n    hurt(\n      atr,\n      min,\n      max,\n      special,\n      source,\n      target\n      // ,cls\n    ) {\n      const plus = special ? 5 : 0;\n      const hurt = this.get_random(min + plus, max + plus);\n      //this[prop] - acessa em this o nome da variável\n      this[atr] = Math.max(this[prop] - hurt, 0);\n      // this.register_log(\n      //     `${source} atingiu ${target} com ${hurt}.`, cls\n      // )\n    },\n    heal_and_hurt() {\n      this.heal(10, 15);\n      this.hurt(\n        \"player_life\",\n        7,\n        12,\n        false,\n        \"Monstro\",\n        \"Jogador\"\n        // , 'monster'\n      );\n    },\n    heal(min, max) {\n      const heal = this.get_random(min, max);\n      this.player_life = Math.min(this.player_life + heal, 100);\n      // this.register_log(\n      //     `Jogador ganhou força de ${heal}.`, 'player'\n      // )\n    }\n  }\n};\n</script>\n\n<style>\n.buttons {\n  display: flex;\n  justify-content: center;\n}\n</style>"]}]}