{"remainingRequest":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/babel-loader/lib/index.js!/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/src/components/Buttons/Button.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/src/components/Buttons/Button.vue","mtime":1570414869944},{"path":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vbpfelipe/Projetos/Treinos/VueJs/el-matador/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'app-button',\n  props: {\n    button_role: String,\n    type: {\n      type: String,\n      default: \"btn\"\n    }\n  },\n  computed: {\n    buttonClass: function buttonClass() {\n      return \"btn \".concat(this.type);\n    }\n  },\n  methods: {\n    attack: function attack(special) {\n      console.log(\"Alguma coisa\");\n      var atr = character_life.name[\"monster_life\"]; // this.hurt('monster_life', 5, 10, special,\n      //     'Player', 'Monster'\n      //     // , 'player'\n      // )\n      // if(this.monster_life > 0)\n      //     this.hurt('player_life', 7, 12, false,\n      //         'Monster', 'Player'\n      //         // , 'monster'\n      //     )\n    },\n    hurt: function hurt(atr, min, max, special, source, target // ,cls\n    ) {\n      var plus = special ? 5 : 0;\n      var hurt = this.get_random(min + plus, max + plus); //this[prop] - acessa em this o nome da variável\n\n      this[atr] = Math.max(this[prop] - hurt, 0); // this.register_log(\n      //     `${source} atingiu ${target} com ${hurt}.`, cls\n      // )\n    },\n    heal_and_hurt: function heal_and_hurt() {\n      this.heal(10, 15);\n      this.hurt(\"player_life\", 7, 12, false, \"Monstro\", \"Jogador\" // , 'monster'\n      );\n    },\n    heal: function heal(min, max) {\n      var heal = this.get_random(min, max);\n      this.player_life = Math.min(this.player_life + heal, 100); // this.register_log(\n      //     `Jogador ganhou força de ${heal}.`, 'player'\n      // )\n    }\n  }\n};",{"version":3,"sources":["Button.vue"],"names":[],"mappings":";;;;;;;;;;AAUA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAFA,GAFA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,2BAAA,KAAA,IAAA;AACA;AAHA,GATA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,OADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,UAAA,GAAA,GAAA,cAAA,CAAA,IAAA,CAAA,cAAA,CAAA,CAFA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAdA;AAeA,IAAA,IAfA,gBAgBA,GAhBA,EAiBA,GAjBA,EAkBA,GAlBA,EAmBA,OAnBA,EAoBA,MApBA,EAqBA,MArBA,CAsBA;AAtBA,MAuBA;AACA,UAAA,IAAA,GAAA,OAAA,GAAA,CAAA,GAAA,CAAA;AACA,UAAA,IAAA,GAAA,KAAA,UAAA,CAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IAAA,CAAA,CAFA,CAGA;;AACA,WAAA,GAAA,IAAA,IAAA,CAAA,GAAA,CAAA,KAAA,IAAA,IAAA,IAAA,EAAA,CAAA,CAAA,CAJA,CAKA;AACA;AACA;AACA,KA/BA;AAgCA,IAAA,aAhCA,2BAgCA;AACA,WAAA,IAAA,CAAA,EAAA,EAAA,EAAA;AACA,WAAA,IAAA,CACA,aADA,EAEA,CAFA,EAGA,EAHA,EAIA,KAJA,EAKA,SALA,EAMA,SANA,CAOA;AAPA;AASA,KA3CA;AA4CA,IAAA,IA5CA,gBA4CA,GA5CA,EA4CA,GA5CA,EA4CA;AACA,UAAA,IAAA,GAAA,KAAA,UAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,WAAA,WAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,WAAA,GAAA,IAAA,EAAA,GAAA,CAAA,CAFA,CAGA;AACA;AACA;AACA;AAlDA;AAdA,CAAA","sourcesContent":["<template>\n    <div id=\"button\">\n        <!-- <button @click=\"attack(false)\" class=\"btn attack\"> -->\n        <button :class=\"buttonClass\">\n            {{ button_role }}\n        </button>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'app-button',\n        props: {\n            button_role: String,\n            type: {\n                type: String,\n                default: \"btn\"\n            }\n        },\n        computed: {\n            buttonClass(){\n                return `btn ${this.type}`\n            }\n        },\nmethods: {\n    attack(special) {\n    console.log(\"Alguma coisa\")\n    var atr = character_life.name[\"monster_life\"];\n\n    // this.hurt('monster_life', 5, 10, special,\n    //     'Player', 'Monster'\n    //     // , 'player'\n    // )\n    // if(this.monster_life > 0)\n    //     this.hurt('player_life', 7, 12, false,\n    //         'Monster', 'Player'\n    //         // , 'monster'\n    //     )\n    },\n    hurt(\n    atr,\n    min,\n    max,\n    special,\n    source,\n    target\n    // ,cls\n    ) {\n    const plus = special ? 5 : 0;\n    const hurt = this.get_random(min + plus, max + plus);\n    //this[prop] - acessa em this o nome da variável\n    this[atr] = Math.max(this[prop] - hurt, 0);\n    // this.register_log(\n    //     `${source} atingiu ${target} com ${hurt}.`, cls\n    // )\n    },\n    heal_and_hurt() {\n    this.heal(10, 15);\n    this.hurt(\n        \"player_life\",\n        7,\n        12,\n        false,\n        \"Monstro\",\n        \"Jogador\"\n        // , 'monster'\n    );\n    },\n    heal(min, max) {\n    const heal = this.get_random(min, max);\n    this.player_life = Math.min(this.player_life + heal, 100);\n    // this.register_log(\n    //     `Jogador ganhou força de ${heal}.`, 'player'\n    // )\n    }\n}\n    }\n</script>\n\n<style>\n\n    .btn{\n        padding: 5px 10px;\n        margin: 0px 10px;\n        border-radius: 5px;\n        text-transform: uppercase;\n        font-size: 1.1rem;\n    }\n\n    .new-game{\n        background-color: #4253af;\n        color: #fff;\n    }\n\n    .attack{\n        background-color: #e51c23;\n        color: #fff;\n    }\n\n    .special-attack{\n        background-color: #ff9800;\n        color: #000;\n    }\n\n    .heal{\n        background-color: #259b24;\n        color: #fff;\n    }\n\n    .give-up{\n        background-color: #bbb;\n        color: #000;\n    }\n</style>"],"sourceRoot":"src/components/Buttons"}]}